{
  "swagger": "2.0",
  "info": {
    "title": "Event Tracker API",
    "description": "API for tracking events from different sources (Jira, Notion, Slack).",
    "version": "1.0.0"
  },
  "host": "localhost:4000",
  "basePath": "/api",
  "schemes": ["http"],
  "paths": {
    "/events": {
      "get": {
        "summary": "Get all events",
        "description": "Retrieve a list of events with pagination, sorting, and filtering.",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number (default 1)"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of events per page (default 10)"
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "default": "timestamp",
              "enum": ["timestamp", "userId", "eventType"]
            },
            "description": "Field to sort by (timestamp, userId, or eventType)"
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "default": "DESC",
              "enum": ["ASC", "DESC"]
            },
            "description": "Sort order (ASC or DESC)"
          },
          {
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "object"
            },
            "description": "Filter by fields (e.g., ?filter[source]=Jira&filter[userId]=user123)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with a list of events",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "events": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Event"
                      }
                    },
                    "totalPages": {
                      "type": "integer"
                    },
                    "currentPage": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new event",
        "description": "Create a new event with the specified details.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "'#/components/schemas/Event'"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Event created successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/events/{id}": {
      "get": {
        "summary": "Get a single event",
        "description": "Retrieve a single event by ID.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Event ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with the event",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "404": {
            "description": "Event not found"
          }
        }
      },
      "put": {
        "summary": "Update an event",
        "description": "Update an existing event by ID.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Event ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Event updated successfully"
          },
          "404": {
            "description": "Event not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete an event",
        "description": "Delete an event by ID.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Event ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Event deleted successfully"
          },
          "404": {
            "description": "Event not found"
          }
        }
      }
    },
    "/users/{userId}/events": {
      "get": {
        "summary": "Get events for a specific user",
        "description": "Retrieve all events associated with a specific user.",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with a list of events",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/stats": {
      "get": {
        "summary": "Get aggregated statistics",
        "description": "Retrieve aggregate statistics about the events.",
        "responses": {
          "200": {
            "description": "Successful response with statistics"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Event": {
        "type": "object",
        "required": [
          "id",
          "source",
          "timestamp",
          "userId",
          "eventType",
          "eventData"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "source": {
            "type": "string",
            "enum": ["Jira", "Notion", "Slack"]
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "string"
          },
          "eventType": {
            "type": "string"
          },
          "eventData": {
            "type": "object"
          }
        }
      }
    }
  }
}
